{"version":3,"file":"static/js/758.9ea8b4dc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsFilter/Filter.jsx","components/ContactsList/ContactsList.jsx","components/PhonebookForm/PhonebookForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.IsLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport ContactsIcon from '@mui/icons-material/Contacts';\nimport {\n  Avatar,\n  Box,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n  createTheme,\n} from '@mui/material';\nimport { ThemeProvider } from 'styled-components';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(filterContact(e.target.value));\n\n  const defaultTheme = createTheme();\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"div\" maxWidth=\"sm\">\n        <CssBaseline />\n        <Box\n          sx={{\n            paddingTop: 2,\n            paddingBottom: 2,\n            paddingLeft: 4,\n            paddingRight: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <ContactsIcon />\n          </Avatar>\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            sx={{\n              marginBottom: 2,\n            }}\n          >\n            My contacts\n          </Typography>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"text\"\n            label=\"Search contacts\"\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={onChange}\n            autoFocus\n          />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PersonIcon from '@mui/icons-material/Person';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Avatar,\n  Container,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container component=\"div\" maxWidth=\"sm\">\n      <List\n        sx={{\n          paddingTop: 2,\n          paddingBottom: 2,\n          paddingLeft: 4,\n          paddingRight: 4,\n        }}\n      >\n        {Array.isArray(visibleContacts) &&\n          visibleContacts.map(contact => {\n            return (\n              <ListItem\n                key={contact._id}\n                sx={{\n                  flexWrap: true,\n                  gap: 4,\n                  border: `1px solid`,\n                  borderColor: 'primary.main',\n                  borderRadius: '5px',\n                  mb: 1,\n                  '@media (max-width: 425px)': {\n                    flexDirection: 'column',\n                    gap: 0,\n                  },\n                }}\n              >\n                <ListItemAvatar>\n                  <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  sx={{ flexBasis: 'auto', overflowWrap: 'break-word' }}\n                >\n                  {contact.name}\n                </ListItemText>\n                <ListItemText\n                  sx={{ flexBasis: 'auto', overflowWrap: 'break-word' }}\n                >\n                  {contact.number}\n                </ListItemText>\n                <ListItemIcon>\n                  <IconButton\n                    aria-label=\"delete\"\n                    onClick={() => dispatch(deleteContact(contact._id))}\n                    sx={{\n                      m: 1,\n                      bgcolor: 'primary.main',\n                    }}\n                  >\n                    <DeleteIcon sx={{ color: 'white' }} />\n                  </IconButton>\n                </ListItemIcon>\n              </ListItem>\n            );\n          })}\n      </List>\n    </Container>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Notify } from 'notiflix';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  FormHelperText,\n  TextField,\n  Typography,\n  createTheme,\n} from '@mui/material';\nimport { ThemeProvider } from 'styled-components';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\n\nconst schema = yup\n  .object({\n    name: yup\n      .string()\n      .matches(/^[a-zA-Zа-яА-ЯіїІЇґєҐЄ]+([' -][a-zA-Zа-яА-ЯіїІЇґєҐЄ]+)*$/)\n      .required('Blabla'),\n    number: yup.string().required(),\n  })\n  .required();\n\nconst PhonebookForm = ({ title }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const defaultTheme = createTheme();\n\n  const onSubmit = data => {\n    const { name, number } = data;\n    const normalizedContact = name.toLowerCase().trim();\n    const normalizedNumber = number.toString();\n\n    if (\n      contacts.some(el => el.name.toLowerCase().trim() === normalizedContact)\n    ) {\n      Notify.warning(\n        `The contact name ${normalizedContact} is already exists!`\n      );\n      return;\n    }\n\n    if (contacts.some(el => el.number === normalizedNumber)) {\n      Notify.warning(\n        `The contact number ${normalizedNumber} is already exists!`\n      );\n      return;\n    }\n\n    dispatch(addContact(data));\n\n    reset();\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"div\" maxWidth=\"sm\">\n        <CssBaseline />\n        <Box\n          sx={{\n            padding: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <PersonAddIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h4\">\n            Create a new contact\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit(onSubmit)}\n            sx={{ padding: 2 }}\n          >\n            <TextField\n              {...register('name')}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              type=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n            />\n            {errors.name && (\n              <FormHelperText id=\"component-error-text\">\n                Enter in English or Ukrainian\n              </FormHelperText>\n            )}\n            <TextField\n              {...register('number')}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"number\"\n              label=\"Number\"\n              type=\"number\"\n              autoComplete=\"number\"\n            />\n            {errors.number && (\n              <FormHelperText id=\"component-error-text\">\n                Enter only numbers\n              </FormHelperText>\n            )}\n            <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3 }}>\n              Add contacts\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nPhonebookForm.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PhonebookForm;\n","import Filter from 'components/ContactsFilter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsAuthorized } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isAuthorized = useSelector(selectIsAuthorized);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return isAuthorized ? (\n    <>\n      <PhonebookForm title=\"Phonebook\" />\n      {isLoading && !error && <CircularProgress color=\"inherit\" />}\n      <Filter></Filter>\n      <ContactsList title=\"Contacts\" />\n      {error && <b>{error}</b>}\n    </>\n  ) : (\n    <h2>Sign in to access the phonebook!</h2>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","IsLoading","selectError","error","selectFilter","filter","useSelector","dispatch","useDispatch","defaultTheme","createTheme","_jsx","ThemeProvider","theme","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","paddingTop","paddingBottom","paddingLeft","paddingRight","display","flexDirection","alignItems","Avatar","m","bgcolor","ContactsIcon","Typography","variant","marginBottom","TextField","margin","fullWidth","id","label","type","name","value","onChange","e","filterContact","target","autoFocus","visibleContacts","contact","toLowerCase","includes","List","Array","isArray","map","ListItem","flexWrap","gap","border","borderColor","borderRadius","mb","ListItemAvatar","PersonIcon","ListItemText","flexBasis","overflowWrap","number","ListItemIcon","IconButton","onClick","deleteContact","_id","DeleteIcon","color","schema","yup","matches","required","_ref","title","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","padding","PersonAddIcon","onSubmit","data","normalizedContact","trim","normalizedNumber","toString","some","el","Notify","concat","addContact","_objectSpread","autoComplete","FormHelperText","Button","mt","isAuthorized","selectIsAuthorized","isLoading","useEffect","fetchContacts","_Fragment","PhonebookForm","CircularProgress","Filter","ContactsList"],"sourceRoot":""}